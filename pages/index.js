import Head from 'next/head'
import styles from '@/styles/Home.module.css'

import { useState, useEffect } from 'react'
import { Button, Card } from '@mui/material'
import Cookies from 'universal-cookie'
import axios from 'axios'


export default function Home() {

  const [queSonPremios, setQueSonPremios] = useState(undefined);
  const [categorias, setCategorias] = useState(undefined);
  const [jueces, setJueces] = useState(undefined);
  
  useEffect( () => {
    async function fetchPremios() {
      let err = false
      let response = null
      const headers = { 'Authorization': 'Basic Auth' };
      try {
        response = await axios.get('https://awards.goula.lat/cms/wp-json/wp/v2/convocatoria/49', { headers }, { 'Authorization': 'Basic Auth' })
  
      }catch (error) {
        console.log('error')
        err = true
      }
  
      if (err) {
        console.log(response)
      } else{
        setQueSonPremios(response.data)
      }
    }
    
    async function fetchCategorias() {
      let err = false
      let response = null
      const headers = { 'Authorization': 'Basic Auth' };
      try {
        response = await axios.get('https://awards.goula.lat/cms/wp-json/wp/v2/convocatoria/709', { headers }, { 'Authorization': 'Basic Auth' })
  
      }catch (error) {
        console.log('error')
        err = true
      }
  
      if (err) {
        console.log(response)
      } else{
        setCategorias(response.data)
      }
    }
    
    async function fetchJueces() {
      let err = false
      let response = null
      const headers = { 'Authorization': 'Basic Auth' };
      try {
        response = await axios.get('https://awards.goula.lat/cms/wp-json/wp/v2/convocatoria/69', { headers }, { 'Authorization': 'Basic Auth' })
  
      }catch (error) {
        console.log('error')
        err = true
      }
  
      if (err) {
        console.log(response)
      } else{
        setJueces(response.data)
      }
    }
    if(queSonPremios === undefined){
      fetchPremios();
    }
    if(categorias === undefined){
      fetchCategorias();
    }
    if(jueces === undefined){
      fetchJueces();
    }
  })


  const logout = async (e) => {
    e.preventDefault();
    const cookies = new Cookies();
    cookies.remove('token');
    window.location.replace('/login')
    
  }

  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className="navbar bg-primary-subtle">
        <div className="container-fluid">
          <a className="navbar-brand">Inicio</a>
          <ul className="navbar-nav me-auto mb-2 mb-lg-0">
            <li className="nav-item">
              <a className="nav-link active" aria-current="page" href="/register">Registro</a>
            </li>
          </ul>
          <form className="d-flex" role="search">
            <Button onClick={logout} className = {styles.marginbutton} variant="contained">Logout</Button>
          </form>
        </div>
      </nav>
      <main className={styles.main}>
        {queSonPremios ? 
        <Card className="container text-center">
          <div className="row">
            <div className="col-12">
              <h1 className={styles.littletop}>
                {queSonPremios.acf.titulo}
              </h1>
              <div dangerouslySetInnerHTML={{ __html: queSonPremios.acf.descripcion }} />
              
            </div>
            <div className="col-6">
              <h3>
                {queSonPremios.acf.bases.subtitulo}
              </h3>
              <p>
                {queSonPremios.acf.bases.contenido}
              </p>
              <br/>
            </div>
            <div className="col-6">
            <h3>
              {queSonPremios.acf.fechas_importantes.subtitulo}
            </h3>
            {queSonPremios.acf.fechas_importantes.fechas.map((fecha, index) => {
              return (
                <div key={index}>
                  <h6>{fecha.fecha}</h6>
                </div>
              );
            })}
            </div>
            <hr/>
            <div className="col-6">
              <p className='text-start'>
                Fecha: {queSonPremios.modified.substring(0, 10)}
              </p>
            </div>
            <div className="col-6">
            Para mas información entra <a href={queSonPremios.link} className="text-primary">aquí</a>
            </div>
          </div>
        </Card>
        :
        <Card className="container text-center">
          <h3>Cargando...</h3>
        </Card>
        }
        
        {categorias ? 
        <Card className="container text-center mt-2">
          <div className="row">
            <div className="col-12">
              <h1 className={styles.littletop}>
                {categorias.acf.titulo}
              </h1>
              <p>
                {categorias.acf.descripcion}
              </p>
              <hr/>
              {categorias.acf.categorias.map((categoria, index) => {
              return (
                <div key={index} className="row">
                  <div className="col-6">
                    <h5>{categoria.titulo}</h5>
                    <p>{categoria.descripcion}</p>
                  </div>
                  <div className="col-6">
                    <img src={categoria.imagen}/>
                  </div>
                  <hr/>
                </div>
              );
            })}
            </div>
            <div className="col">
              <p className='text-start'>Fecha: {categorias.modified.substring(0, 10)}
              </p>
            </div>
            <div className="col">
              Para mas información entra <a href={categorias.link} className="text-primary">aquí</a>
            <h3>
            </h3>
            </div>
          </div>
        </Card>
        :
        <Card className="container text-center">
          <h3>Cargando...</h3>
        </Card>
        }

        {jueces ? 
        <Card className="container text-center mt-2">
          <div className="row">
            <div className="col-12">
              <h1 className={styles.littletop}>
                {jueces.acf.titulo}
              </h1>
              <p>
                {jueces.acf.descripcion}
              </p>
              <hr/>
              
            </div>
            <div className="col">
              <p className='text-start'>Fecha: {jueces.modified.substring(0, 10)}
              </p>
            </div>
            <div className="col">
              Para mas información entra <a href={jueces.link} className="text-primary">aquí</a>
            <h3>
            </h3>
            </div>
          </div>
        </Card>
        :
        <Card className="container text-center">
          <h3>Cargando...</h3>
        </Card>
        }

        
      </main>
    </>
  )
}
